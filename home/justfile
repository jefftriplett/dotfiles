set dotenv-load := false
set export := true
set quiet := true
# set unstable := true

# set unstable := true

export HOMEBREW_NO_ENV_HINTS := "true"
export JUST_UNSTABLE := "true"
export PIP_REQUIRE_VIRTUALENV := "false"

# export HOMEBREW_NO_AUTO_UPDATE := "true"

mod claude '.justfiles/claude.justfile'
mod codex '.justfiles/codex.justfile'
mod homebrew '.justfiles/homebrew.justfile'
mod llm '.justfiles/llm.justfile'
mod macos '.justfiles/macos.justfile'
mod mise '.justfiles/mise.justfile'
mod ollama '.justfiles/ollama.justfile'
mod pyenv '.justfiles/pyenv.justfile'
mod python '.justfiles/python.justfile'
mod virtualenv '.justfiles/virtualenv.justfile'
mod virtualenvwrapper '.justfiles/virtualenvwrapper.justfile'

HOST := `hostname -s`
RICH_THEME := "dracula"

alias lock := freeze

# ----------------------------------------------------------------
# In the spirit of "Scripts to rule them all"
# ----------------------------------------------------------------

[private]
@default:
    just --list

# Install and update all dependencies
[group("setup")]
@bootstrap:
    if [ -f "Brewfile" ] && [ "$(uname -s)" = "Darwin" ]; then \
        echo "==> Installing Homebrew dependencies..."; \
        brew bundle install; \
    fi

    just macos::xcode-bootstrap
    just mise::bootstrap
    just python::bootstrap

# Clean up old Homebrew packages and casks
[group("maintenance")]
@cleanup DAYS="0":
    just homebrew::cleanup {{ DAYS }}

# Format and overwrite justfile
[group("utils")]
@fmt:
    just --fmt --unstable
    just claude fmt
    just codex fmt
    just homebrew fmt
    just llm fmt
    just macos fmt
    just mise fmt
    just ollama fmt
    just pyenv fmt
    just python fmt
    just virtualenv fmt
    just virtualenvwrapper fmt

# Update lockfiles without installing dependencies
[group("setup")]
@freeze:
    just homebrew::freeze

# Create symlinks for dotfiles using homesick
[group("setup")]
@install:
    homesick symlink

# List outdated packages from Homebrew and pip
[group("maintenance")]
@outdated:
    just homebrew::outdated
    PIP_REQUIRE_VIRTUALENV=false python -m pip list --outdated

# Restart Homebrew services
[group("services")]
@restart:
    just homebrew::services-restart

# Stop all Homebrew services
[group("services")]
@stop:
    just homebrew::services-stop

# Update project to run at its current version
[group("maintenance")]
@update:
    just upgrade
    just restart
    just cleanup

# Update and upgrade Homebrew packages
[group("maintenance")]
@upgrade:
    just claude::upgrade
    just homebrew::upgrade
    just homebrew::cleanup
    just mise::update
    just python::update
    just llm::upgrade

# Upgrade all tools (pyenv and mise packages)
[group("maintenance")]
@upgrade-all:
    just pyenv::upgrade-all
    just mise::install

# ----------------------------------------------------------------
# Postgres related
# ----------------------------------------------------------------

# Upgrade PostgreSQL to latest version and migrate databases
[group("database")]
@postgresql-upgrade:
    brew unpin postgresql
    brew upgrade postgresql
    brew pin postgresql
    brew postgresql-upgrade-database

# ----------------------------------------------------------------
# Useful tailscale/golink shortcuts
# ----------------------------------------------------------------

# Open documentation in browser using Tailscale/golinks
[group("golinks")]
@open-docs:
    open http://go/docs

# Open Tailscale/golinks homepage
[group("golinks")]
@open-go:
    open http://go

# Open Home Assistant interface in browser
[group("golinks")]
@open-ha:
    open http://go/homeassistant

# Open Syncthing interface in browser
[group("golinks")]
@open-syncthing:
    open http://go/syncthing

# ----------------------------------------------------------------
# TODO: ...
# ----------------------------------------------------------------

# Update Brewfile from cog template
[group("utils")]
@update-brewfile:
    cd "$HOME/.homesick/repos/dotfiles/home" && uv run --with cogapp cog -Pr ./Brewfile.cog

# Update README.md docs using cog
[group("utils")]
@update-readme-docs:
    cd "$HOME/.homesick/repos/dotfiles" && uv run --with cogapp cog -Pr ./README.md
