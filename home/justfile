set dotenv-load := false
set export := true

# set unstable := true

export HOMEBREW_NO_ENV_HINTS := "true"
export JUST_UNSTABLE := "true"
export PIP_REQUIRE_VIRTUALENV := "false"

# export HOMEBREW_NO_AUTO_UPDATE := "true"

mod claude '.justfiles/claude.justfile'
mod homebrew '.justfiles/homebrew.justfile'
mod llm '.justfiles/llm.justfile'
mod macos '.justfiles/macos.justfile'
mod ollama '.justfiles/ollama.justfile'
mod pyenv '.justfiles/pyenv.justfile'
mod python '.justfiles/python.justfile'
mod virtualenv '.justfiles/virtualenv.justfile'
mod virtualenvwrapper '.justfiles/virtualenvwrapper.justfile'

HOST := `hostname -s`
RICH_THEME := "dracula"

alias lock := freeze

# ----------------------------------------------------------------
# In the spirit of "Scripts to rule them all"
# ----------------------------------------------------------------

[private]
@default:
    just --list

# installs/updates all dependencies
@bootstrap:
    if [ -f "Brewfile" ] && [ "$(uname -s)" = "Darwin" ]; then \
        echo "==> Installing Homebrew dependencies..."; \
        brew bundle install; \
    fi

    just macos::xcode-bootstrap
    just mise-bootstrap
    just python::bootstrap

# clean up old homebrew packages and casks
@cleanup DAYS="0":
    just homebrew::cleanup {{ DAYS }}

# format and overwrite justfile
@fmt:
    just --fmt --unstable
    just claude fmt
    just homebrew fmt
    just llm fmt
    just macos fmt
    just ollama fmt
    just pyenv fmt
    just python fmt
    just virtualenv fmt
    just virtualenvwrapper fmt

# Updates our lockfiles without installing dependencies
@freeze:
    just homebrew::freeze

# create symlinks for dotfiles using homesick
@install:
    homesick symlink

# list outdated packages from homebrew and pip
@outdated:
    just homebrew::outdated
    PIP_REQUIRE_VIRTUALENV=false python -m pip list --outdated

# restart homebrew services
@restart:
    just homebrew::services-restart

# stop all homebrew services
@stop:
    just homebrew::services-stop

# updates a project to run at its current version
@update:
    just upgrade
    just restart
    just cleanup

# update and upgrade homebrew packages
@upgrade:
    just claude::upgrade
    just homebrew::update
    just homebrew::upgrade
    # just homebrew::cleanup
    just python::update

# upgrade all tools (pyenv and mise packages)
@upgrade-all:
    just pyenv::upgrade-all
    mise install
    mise reshim

# ----------------------------------------------------------------
# mise - https://github.com/jdx/mise
# ----------------------------------------------------------------

# bootstrap mise by installing configured language versions
[private]
@mise-bootstrap:
    mise install golang
    mise install node
    mise install ruby
    mise install rust
    mise reshim
    # mise current
    # mise list

# ----------------------------------------------------------------
# Postgres related
# ----------------------------------------------------------------

# upgrade postgresql to latest version and migrate databases
@postgresql-upgrade:
    brew unpin postgresql
    brew upgrade postgresql
    brew pin postgresql
    brew postgresql-upgrade-database

# ----------------------------------------------------------------
# Useful tailscale/golink shortcuts
# ----------------------------------------------------------------

# open documentation in browser using tailscale/golinks
@open-docs:
    open http://go/docs

# open tailscale/golinks homepage
@open-go:
    open http://go

# open Home Assistant interface in browser
@open-ha:
    open http://go/homeassistant

# open Syncthing interface in browser
@open-syncthing:
    open http://go/syncthing

# ----------------------------------------------------------------
# TODO: ...
# ----------------------------------------------------------------

# Kill all Chrome tabs to improve performance, decrease battery usage, and save memory.
@kill-tabs:
    bunx kill-tabs

# update Brewfile from cog template
@update-brewfile:
    cd "$HOME/.homesick/repos/dotfiles/home" && uv run --with cogapp cog -Pr ./Brewfile.cog

# update README.md docs using cog
@update-readme-docs:
    cd "$HOME/.homesick/repos/dotfiles" && uv run --with cogapp cog -Pr ./README.md
