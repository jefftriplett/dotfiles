# shellcheck shell=bash

####################
# bash completions #
####################

set completion-ignore-case On

for completion in \
    "${HOME}/.asdf/asdf.sh" \
    "${HOME}/.asdf/completions/asdf.bash"
do
    if [[ -e "${completion}" ]] ; then
        source "${completion}"
    fi
done
unset completion

# auto-load bash_completion.d
if [ -d /usr/local/etc/bash_completion.d ]; then
    for filename in "/usr/local/etc/bash_completion.d/"*; do
        if [ -f "${filename}" ]; then
            source "${filename}"
        fi
    done
fi

################
# bash history #
################

shopt -s histappend

#################
# Ruby settings #
#################

if command -v rbenv > /dev/null; then
    eval "$(rbenv init -)";
fi

if [[ -s "${HOME}/.rvm/scripts/rvm" ]]; then
    source "${HOME}/.rvm/scripts/rvm"
fi

###################
# Python settings #
###################

# pyenv settings
if command -v pyenv > /dev/null; then
    eval "$(pyenv init -)";
    pyenv virtualenvwrapper_lazy
fi

###################
# direnv settings #
###################

if command -v direnv > /dev/null; then
    eval "$(direnv hook bash)";
fi

###################################
# command-not-found-init settings #
###################################

if brew command command-not-found-init > /dev/null 2>&1; then
    eval "$(brew command-not-found-init)";
fi

##############################
# mcfly bash history manager #
##############################

if [[ -f "$(brew --prefix)/opt/mcfly/mcfly.bash" ]]; then
  source "$(brew --prefix)/opt/mcfly/mcfly.bash"
fi

####################
# thefuck settings #
####################

if command -v thefuck > /dev/null; then
    eval "$(thefuck --alias)";
fi

################
# add ssh keys #
################

ssh-add -k &> /dev/null
###################
# iTerm2 settings #
###################

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

function iterm2_print_user_vars {
    iterm2_set_user_var badge "${USER_BADGE}"
}

## itermocil autocompletion
# if command -v itermocil > /dev/null; then
#     complete -W "$(itermocil --list)" itermocil
# fi

####################
# Google Cloud SDK #
####################

# # The next line updates PATH for the Google Cloud SDK.
# if [ -f '/Users/jefftriplett/Downloads/google-cloud-sdk/path.bash.inc' ]; then
#     . '/Users/jefftriplett/Downloads/google-cloud-sdk/path.bash.inc';
# fi

# # The next line enables shell command completion for gcloud.
# if [ -f '/Users/jefftriplett/Downloads/google-cloud-sdk/completion.bash.inc' ]; then
#     . '/Users/jefftriplett/Downloads/google-cloud-sdk/completion.bash.inc';
# fi


# TODO: move over the homebrew cask google-cloud-sdk
# source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.bash.inc'
# source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.bash.inc'

# The next line updates PATH for the Google Cloud SDK.
# if [ -f '${HOME}/Downloads/google-cloud-sdk/path.bash.inc' ]; then
#     source '${HOME}/Downloads/google-cloud-sdk/path.bash.inc'
# fi

# # The next line enables shell command completion for gcloud.
# if [ -f '${HOME}/Downloads/google-cloud-sdk/completion.bash.inc' ]; then
#     source '${HOME}/Downloads/google-cloud-sdk/completion.bash.inc'
# fi

# The next line updates PATH for the Google Cloud SDK.
# if [ -f '${HOME}/google-cloud-sdk/path.bash.inc' ]; then source '${HOME}/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
# if [ -f '${HOME}/google-cloud-sdk/completion.bash.inc' ]; then source '${HOME}/google-cloud-sdk/completion.bash.inc'; fi
