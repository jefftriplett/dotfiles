# shellcheck shell=bash

############
# Homebrew #
############

architecture=$(uname -m)

if [ "$architecture" = "arm64" ]; then
  PATH="/opt/homebrew/sbin:/opt/homebrew/bin:${PATH}"
  export CPPFLAGS="-I/opt/homebrew/opt/readline/include"
  export LD_LIBRARY_PATH="/opt/homebrew/lib"
  export LDFLAGS="-L/opt/homebrew/opt/readline/lib"
elif [ "$architecture" = "x86_64" ]; then
  PATH="/usr/local/sbin:/usr/local/bin:${PATH}"
  export CPPFLAGS="-I/usr/local/opt/readline/include"
  export LD_LIBRARY_PATH="/usr/local/lib"
  export LDFLAGS="-L/usr/local/opt/readline/lib"
fi

# export CFLAGS="-I$(xcrun --show-sdk-path)/usr/include"
# export ARCHFLAGS="-Wno-error=unused-command-line-argument-hard-error-in-future"
export ARCHFLAGS="-Werror=unused-command-line-argument"
export DOCKER_SCAN_SUGGEST=false
export HISTCONTROL="ignoreboth:erasedups"
export HISTFILESIZE=50000000
export HISTIGNORE=" *:ls:cd:cd ~:date:exit:export:history:pwd:* --help"
export HISTSIZE=$HISTFILESIZE
export HISTTIMEFORMAT="%F %T "
export HOMEBREW_CLEANUP_MAX_AGE_DAYS=7
export HOMEBREW_INSTALL_CLEANUP=1
# export HOMEBREW_INSTALL_FROM_API=1
export HOMEBREW_NO_ANALYTICS=1
# export HOMEBREW_NO_AUTO_UPDATE=1
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

# default badge
export USER_BADGE_DEFAULT="âœ¨"
export USER_BADGE="${USER_BADGE_DEFAULT}"

if [[ -e ${HOME}/bin ]] ; then
  PATH="${HOME}/bin:${PATH}"
fi

################
# git settings #
################

export GIT_PS1_SHOWCOLORHINTS=true
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true

###################
# python settings #
###################

export PYTHONDONTWRITEBYTECODE=1

## pip settings
export PIP_DOWNLOAD_CACHE="/tmp/.pip/download_cache"
export PIP_REQUIRE_VIRTUALENV="true"
export PIP_RESPECT_VIRTUALENV="true"

###########################
# python / pipsi settings #
###########################

PATH="${PATH}:${HOME}/.local/bin"

###########################
# python / pyenv settings #
###########################

# export PYENV_ROOT="${HOME}/.pyenv"
# export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"

# PATH="${PATH}:${PYENV_ROOT}/bin"

#######
# bun #
#######

export BUN_INSTALL="${HOME}/.bun"

PATH="${PATH}:${BUN_INSTALL}/bin"

############
# OrbStack #
############

if [[ -e ${HOME}/.orbstack/shell/init.bash ]] ; then
    source ${HOME}/.orbstack/shell/init.bash 2>/dev/null || :
fi

################
# clean / done #
################

export PATH
